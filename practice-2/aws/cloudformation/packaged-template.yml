AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: For aws training - week 5 - practice 2
Parameters:
  LambdaFunctionName:
    Description: Lambda Function Name
    Default: yyl-week5-practice-2-lambda-function
    Type: String
  LambdaPolicyLogName:
    Description: Policy Name
    Default: yyl-week5-practice-2-lambda-policy-log
    Type: String
  LambdaCloudWatchPolicyName:
    Description: Policy Name
    Default: yyl-week5-practice-2-lambda-cloudWatch-policy
    Type: String
  LambdaRoleName:
    Description: Lambda Role Name
    Default: yyl-week5-practice-2-lambda-role
    Type: String
  SNSTopicName:
    Description: SNS Topic Name
    Default: yyl-week5-practice-2-sns-topic
    Type: String
  LambdaMetricsAlarmName:
    Description: Lambda Metrics Alarm Name
    Default: yyl-week5-practice-2-lambda-metrics-alarm
    Type: String
  CloudWatchMetricsNamespaceName:
    Description: CloudWatch Metrics Namespace Name
    Type: String
    Default: yyl-week5-practice-2-cloudWatch-metrics-namespace
  LambdaMetricName:
    Description: CloudWatch Metric Name
    Type: String
    Default: metrics-for-lambda
  CloudWatchEventRuleName:
    Description: CloudWatch Event Rule Name
    Default: yyl-week5-practice-2-scheduled-rule
    Type: String
Resources:
  LambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${LambdaFunctionName}
      RetentionInDays: 7
  MyLambda:
    Type: AWS::Serverless::Function
    DependsOn:
    - LambdaLogGroup
    Properties:
      FunctionName:
        Ref: LambdaFunctionName
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Handler: index.handler
      Runtime: nodejs12.x
      CodeUri: s3://yyl-deployment-bucket/lambda/week5/019194a8b5c5ccd616fed1b793475824
      MemorySize: 128
      Timeout: 3
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: LambdaRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Ref: LambdaPolicyLogName
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*:*
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - MyLambda
        - Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - CloudWatchEventRule
        - Arn
  CloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Ref: CloudWatchEventRuleName
      Description: ScheduledRule in CloudWatch Event to trigger Lambda
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - MyLambda
          - Arn
        Id:
          Ref: LambdaFunctionName
  CloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn:
    - MySNSTopic
    Properties:
      AlarmActions:
      - Ref: MySNSTopic
      AlarmDescription: Lambda Invoke
      AlarmName:
        Ref: LambdaMetricsAlarmName
      Threshold: 2
      Statistic: Sum
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Period: 300
      EvaluationPeriods: 1
      MetricName:
        Ref: LambdaMetricName
      Namespace:
        Ref: CloudWatchMetricsNamespaceName
  CloudWatchLogMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName:
        Ref: LambdaLogGroup
      FilterPattern: INFO Logging
      MetricTransformations:
      - MetricNamespace:
          Ref: CloudWatchMetricsNamespaceName
        MetricName:
          Ref: LambdaMetricName
        MetricValue: 1
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Ref: SNSTopicName
      Subscription:
      - Endpoint: plin005@163.com
        Protocol: email
